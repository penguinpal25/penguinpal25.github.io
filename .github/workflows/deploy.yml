name: Deploy pages on push

# When the action should run. Here we specify it should run on push to main branch.
# We also allow for manually running the action with the empty "workflow_dispatch".
on:
  push:
    branches:
      - gh-pages

  workflow_dispatch:

# Set the needed permissions
permissions:
  contents: read
  pages: write
  id-token: write

# Cancel running deployments if a new one is issued.
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"
          extended: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build
        run: hugo --baseURL "${{ steps.pages.outputs.base_url }}/"
        #run: hugo --config hugo.yaml

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

      # Slack Notification Step
      - name: Notify Slack
        if: always() # Ensures the notification runs regardless of success or failure
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "Build finished with status: ${{ job.status }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      # Slack Notification Step
      #- name: Notify Slack
      #  if: always() # Ensures the notification runs regardless of success or failure
      #  run: |
      #    curl -X POST -H 'Content-type: application/json' \
      #    --data '{"text": "Deployment finished with status: ${{ job.status }}.\nView the deployed site here: ${{ steps.deployment.outputs.page_url }}"}' \
      #    ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Notify Slack
        if: always() # Ensures the notification runs regardless of success or failure
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*GitHub Actions Notification*"
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Repository:*\n${{ github.repository }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Workflow:*\n${{ github.workflow }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Branch:*\n${{ github.ref }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Commit:*\n<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Job Status:*\n${{ job.status }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Deployed URL:*\n<${{ steps.deployment.outputs.page_url }}|View Site>"
                  }
                ]
              }
            ]
          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
    
